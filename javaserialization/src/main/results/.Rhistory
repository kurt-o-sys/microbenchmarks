jsondata<-fromJSON(file="results1.json")
results<-data.frame()
for (i in 1:length(jsondata)) {
item<-jsondata[[i]]
entity<-factor(ifelse(grepl("longEntity",item$benchmark), "long","string"))
threads<-item$threads
smile<-ifelse(grepl("[sS]mile",item$benchmark), TRUE,FALSE)
array<-ifelse(grepl("[aA]rray",item$benchmark), TRUE,FALSE)
json<-ifelse(grepl("[jJ]son",item$benchmark), TRUE,FALSE)
ext<-ifelse(grepl("[eE]xt",item$benchmark), TRUE,FALSE)
fast<-ifelse(grepl("[fF]ast",item$benchmark), TRUE,FALSE)
compress<-ifelse(grepl("[cC]ompress",item$benchmark), TRUE,FALSE)
size<-1
for (fork in 1:length(item$primaryMetric$rawData)) {
for(it in 1:length(item$primaryMetric$rawData[[fork]])) {
row<-data.frame(
entity=entity,
threads=threads,
fork=fork,
smile=smile,
array=array,
json=json,
ext=ext,
fast=fast,
compress=compress,
iteration=it,
metric=item$primaryMetric$rawData[[fork]][it],
size=size
)
results <- rbind(results, row)
}
}
}
getwd()
setwd("/home/kurt/dev/microbenchmarks/javaserialization/src/main/results")
library("rjson")
setwd("/home/kurt/dev/microbenchmarks/javaserialization/src/main/results")
jsondata<-fromJSON(file="results1.json")
results<-data.frame()
for (i in 1:length(jsondata)) {
item<-jsondata[[i]]
entity<-factor(ifelse(grepl("longEntity",item$benchmark), "long","string"))
threads<-item$threads
smile<-ifelse(grepl("[sS]mile",item$benchmark), TRUE,FALSE)
array<-ifelse(grepl("[aA]rray",item$benchmark), TRUE,FALSE)
json<-ifelse(grepl("[jJ]son",item$benchmark), TRUE,FALSE)
ext<-ifelse(grepl("[eE]xt",item$benchmark), TRUE,FALSE)
fast<-ifelse(grepl("[fF]ast",item$benchmark), TRUE,FALSE)
compress<-ifelse(grepl("[cC]ompress",item$benchmark), TRUE,FALSE)
size<-1
for (fork in 1:length(item$primaryMetric$rawData)) {
for(it in 1:length(item$primaryMetric$rawData[[fork]])) {
row<-data.frame(
entity=entity,
threads=threads,
fork=fork,
smile=smile,
array=array,
json=json,
ext=ext,
fast=fast,
compress=compress,
iteration=it,
metric=item$primaryMetric$rawData[[fork]][it],
size=size
)
results <- rbind(results, row)
}
}
}
results
results$benchmark
names(results)
library("rjson")
setwd("/home/kurt/dev/microbenchmarks/javaserialization/src/main/results")
jsondata<-fromJSON(file="results1.json")
results<-data.frame()
for (i in 1:length(jsondata)) {
item<-jsondata[[i]]
benchmark<-factor(item$benchmark)
entity<-factor(ifelse(grepl("longEntity",item$benchmark), "long","string"))
threads<-item$threads
smile<-ifelse(grepl("[sS]mile",item$benchmark), TRUE,FALSE)
array<-ifelse(grepl("[aA]rray",item$benchmark), TRUE,FALSE)
json<-ifelse(grepl("[jJ]son",item$benchmark), TRUE,FALSE)
ext<-ifelse(grepl("[eE]xt",item$benchmark), TRUE,FALSE)
fast<-ifelse(grepl("[fF]ast",item$benchmark), TRUE,FALSE)
compress<-ifelse(grepl("[cC]ompress",item$benchmark), TRUE,FALSE)
size<-1
for (fork in 1:length(item$primaryMetric$rawData)) {
for(it in 1:length(item$primaryMetric$rawData[[fork]])) {
row<-data.frame(
benchmark=benchmark,
entity=entity,
threads=threads,
fork=fork,
smile=smile,
array=array,
json=json,
ext=ext,
fast=fast,
compress=compress,
iteration=it,
metric=item$primaryMetric$rawData[[fork]][it],
size=size
)
results <- rbind(results, row)
}
}
}
results
names(results)
results$benchmark
levels(results$benchmark)
sizes<-data.frame()
cbind(sizes, results$benchmark)
cbind(sizes, levels(results$benchmark))
sizes<-levels(results$benchmark))
sizes<-levels(results$benchmark)
sizes
cbind(sizes,c(1:24))
sizes<-levels(results$benchmark)
sizes<-cbind(sizes, c(83,89,267,189,125,176,107,226,166,205,140,288,0,0,0,0,0,0,0,0,0,0,0,0))
sizes
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, item$benchmark)
}
sizes<-levels(results$benchmark)
sizes<-cbind(sizes, c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, item$benchmark)
}
sizes<-c(benchmark=levels(results$benchmark))
sizes<-cbind(sizes, c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, item$benchmark)
}
sizes<-c(levels(results$benchmark))
sizes<-cbind(sizes, c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
sizes["microbenchmarks.stringEntity.JsonSmileExternalize.benchmarkSerialize" ,]
sizes["microbenchmarks.stringEntity.JsonSmileExternalize.benchmarkSerialize"]
sizes[["microbenchmarks.stringEntity.JsonSmileExternalize.benchmarkSerialize"]
]
sizes
sizes[,"210"]
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, item$benchmark)
}
sizes<-c(factor(levels(results$benchmark)))
sizes<-cbind(sizes, c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
levels(sizes)
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, item$benchmark)
}
sizes<-c(levels(results$benchmark))
sizes<-cbind(factor(sizes), c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, item$benchmark)
}
sizes<-c(results$benchmark)
sizes<-data.frame(sizes, c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, item$benchmark)
}
sizes<-c(results$benchmark)
sizes<-cbind(sizes, c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
rm(sizes)
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, item$benchmark)
}
sizes<-c(results$benchmark)
sizes<-cbind(sizes, c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
rm(sizes)
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, item$benchmark)
}
benchmarks
sizes<-benchmarks
sizes<-cbind(sizes, c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, item$benchmark)
}
sizes<-data.frame(benchmarks)
sizes<-cbind(sizes, c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, item$benchmark)
}
sizes<-data.frame(benchmarks)
sizes<-cbind(sizes, size=c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
sizes[benchmarks="microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize" ,]
sizes[,benchmarks="microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize"]
sizes["microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize"]
sizes["microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize",]
sizes[,"microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize"]
sizes["microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize",]
sizes$benchmarks
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, jsondata[[i]]$benchmark)
}
sizes<-data.frame(benchmarks)
sizes<-cbind(sizes, size=c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
sizes
sizes["microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize",]
sizes[benchmarks="microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize",]
sizes["microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize",]
sizes
sizes[1,]
sizes[,"benchmarks"]
sizes[,"benchmarks"]=="microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize"
sizes[sizes[,"benchmarks"]=="microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize",]
sizes[sizes[,"benchmarks"]=="microbenchmarks.stringEntity.ObjectExternalize.benchmarkSerialize",]$size
library("rjson")
setwd("/home/kurt/dev/microbenchmarks/javaserialization/src/main/results")
jsondata<-fromJSON(file="results1.json")
results<-data.frame()
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, jsondata[[i]]$benchmark)
}
sizes<-data.frame(benchmarks)
sizes<-cbind(sizes, size=c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
for (i in 1:length(jsondata)) {
item<-jsondata[[i]]
benchmark<-factor(item$benchmark)
entity<-factor(ifelse(grepl("longEntity",item$benchmark), "long","string"))
threads<-item$threads
smile<-ifelse(grepl("[sS]mile",item$benchmark), TRUE,FALSE)
array<-ifelse(grepl("[aA]rray",item$benchmark), TRUE,FALSE)
json<-ifelse(grepl("[jJ]son",item$benchmark), TRUE,FALSE)
ext<-ifelse(grepl("[eE]xt",item$benchmark), TRUE,FALSE)
fast<-ifelse(grepl("[fF]ast",item$benchmark), TRUE,FALSE)
compress<-ifelse(grepl("[cC]ompress",item$benchmark), TRUE,FALSE)
size<-sizes[sizes[,"benchmarks"]==benchmark,]$size
for (fork in 1:length(item$primaryMetric$rawData)) {
for(it in 1:length(item$primaryMetric$rawData[[fork]])) {
row<-data.frame(
benchmark=benchmark,
entity=entity,
threads=threads,
fork=fork,
smile=smile,
array=array,
json=json,
ext=ext,
fast=fast,
compress=compress,
iteration=it,
metric=item$primaryMetric$rawData[[fork]][it],
size=size
)
results <- rbind(results, row)
}
}
}
sizes
results
benchmark
as.string(benchmark)
toString(benchmark)
size<-sizes[sizes[,"benchmarks"]==toString(benchmark),]$size
size
library("rjson")
setwd("/home/kurt/dev/microbenchmarks/javaserialization/src/main/results")
jsondata<-fromJSON(file="results1.json")
results<-data.frame()
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, jsondata[[i]]$benchmark)
}
sizes<-data.frame(benchmarks)
sizes<-cbind(sizes, size=c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
for (i in 1:length(jsondata)) {
item<-jsondata[[i]]
benchmark<-factor(item$benchmark)
entity<-factor(ifelse(grepl("longEntity",item$benchmark), "long","string"))
threads<-item$threads
smile<-ifelse(grepl("[sS]mile",item$benchmark), TRUE,FALSE)
array<-ifelse(grepl("[aA]rray",item$benchmark), TRUE,FALSE)
json<-ifelse(grepl("[jJ]son",item$benchmark), TRUE,FALSE)
ext<-ifelse(grepl("[eE]xt",item$benchmark), TRUE,FALSE)
fast<-ifelse(grepl("[fF]ast",item$benchmark), TRUE,FALSE)
compress<-ifelse(grepl("[cC]ompress",item$benchmark), TRUE,FALSE)
size<-sizes[sizes[,"benchmarks"]==toString(benchmark),]$size
for (fork in 1:length(item$primaryMetric$rawData)) {
for(it in 1:length(item$primaryMetric$rawData[[fork]])) {
row<-data.frame(
benchmark=benchmark,
entity=entity,
threads=threads,
fork=fork,
smile=smile,
array=array,
json=json,
ext=ext,
fast=fast,
compress=compress,
iteration=it,
metric=item$primaryMetric$rawData[[fork]][it],
size=size
)
results <- rbind(results, row)
}
}
}
sizes
benchmarks
results
library("rjson")
setwd("/home/kurt/dev/microbenchmarks/javaserialization/src/main/results")
jsondata<-fromJSON(file="results1.json")
results<-data.frame()
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, jsondata[[i]]$benchmark)
}
sizes<-data.frame(benchmarks)
sizes<-cbind(sizes, size=c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
rm(benchmarks)
for (i in 1:length(jsondata)) {
item<-jsondata[[i]]
benchmark<-factor(item$benchmark)
entity<-factor(ifelse(grepl("longEntity",item$benchmark), "long","string"))
threads<-item$threads
smile<-ifelse(grepl("[sS]mile",item$benchmark), TRUE,FALSE)
array<-ifelse(grepl("[aA]rray",item$benchmark), TRUE,FALSE)
json<-ifelse(grepl("[jJ]son",item$benchmark), TRUE,FALSE)
ext<-ifelse(grepl("[eE]xt",item$benchmark), TRUE,FALSE)
fast<-ifelse(grepl("[fF]ast",item$benchmark), TRUE,FALSE)
compress<-ifelse(grepl("[cC]ompress",item$benchmark), TRUE,FALSE)
size<-sizes[sizes[,"benchmarks"]==toString(benchmark),]$size
for (fork in 1:length(item$primaryMetric$rawData)) {
for(it in 1:length(item$primaryMetric$rawData[[fork]])) {
row<-data.frame(
benchmark=benchmark,
entity=entity,
threads=threads,
fork=fork,
smile=smile,
array=array,
json=json,
ext=ext,
fast=fast,
compress=compress,
iteration=it,
metric=item$primaryMetric$rawData[[fork]][it],
size=size
)
results <- rbind(results, row)
}
}
}
rm(sizes)
library("rjson")
setwd("/home/kurt/dev/microbenchmarks/javaserialization/src/main/results")
jsondata<-fromJSON(file="results1.json")
results<-data.frame()
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, jsondata[[i]]$benchmark)
}
sizes<-data.frame(benchmarks)
sizes<-cbind(sizes, size=c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
rm(benchmarks)
for (i in 1:length(jsondata)) {
item<-jsondata[[i]]
benchmark<-factor(item$benchmark)
entity<-factor(ifelse(grepl("longEntity",item$benchmark), "long","string"))
threads<-item$threads
smile<-ifelse(grepl("[sS]mile",item$benchmark), TRUE,FALSE)
array<-ifelse(grepl("[aA]rray",item$benchmark), TRUE,FALSE)
json<-ifelse(grepl("[jJ]son",item$benchmark), TRUE,FALSE)
ext<-ifelse(grepl("[eE]xt",item$benchmark), TRUE,FALSE)
fast<-ifelse(grepl("[fF]ast",item$benchmark), TRUE,FALSE)
compress<-ifelse(grepl("[cC]ompress",item$benchmark), TRUE,FALSE)
size<-sizes[sizes[,"benchmarks"]==toString(benchmark),]$size
for (fork in 1:length(item$primaryMetric$rawData)) {
for(it in 1:length(item$primaryMetric$rawData[[fork]])) {
row<-data.frame(
benchmark=benchmark,
entity=entity,
threads=threads,
fork=fork,
smile=smile,
array=array,
json=json,
ext=ext,
fast=fast,
compress=compress,
iteration=it,
metric=item$primaryMetric$rawData[[fork]][it],
size=size
)
results <- rbind(results, row)
}
}
}
rm(sizes, benchm
ark,compress,entity,ext,fast,fork,i,it,item,json,size,smile,threads)
library("rjson")
setwd("/home/kurt/dev/microbenchmarks/javaserialization/src/main/results")
jsondata<-fromJSON(file="results1.json")
results<-data.frame()
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, jsondata[[i]]$benchmark)
}
sizes<-data.frame(benchmarks)
sizes<-cbind(sizes, size=c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
rm(benchmarks)
for (i in 1:length(jsondata)) {
item<-jsondata[[i]]
benchmark<-factor(item$benchmark)
entity<-factor(ifelse(grepl("longEntity",item$benchmark), "long","string"))
threads<-item$threads
smile<-ifelse(grepl("[sS]mile",item$benchmark), TRUE,FALSE)
array<-ifelse(grepl("[aA]rray",item$benchmark), TRUE,FALSE)
json<-ifelse(grepl("[jJ]son",item$benchmark), TRUE,FALSE)
ext<-ifelse(grepl("[eE]xt",item$benchmark), TRUE,FALSE)
fast<-ifelse(grepl("[fF]ast",item$benchmark), TRUE,FALSE)
compress<-ifelse(grepl("[cC]ompress",item$benchmark), TRUE,FALSE)
size<-sizes[sizes[,"benchmarks"]==toString(benchmark),]$size
for (fork in 1:length(item$primaryMetric$rawData)) {
for(it in 1:length(item$primaryMetric$rawData[[fork]])) {
row<-data.frame(
benchmark=benchmark,
entity=entity,
threads=threads,
fork=fork,
smile=smile,
array=array,
json=json,
ext=ext,
fast=fast,
compress=compress,
iteration=it,
metric=item$primaryMetric$rawData[[fork]][it],
size=size
)
results <- rbind(results, row)
}
}
}
rm(sizes, benchmark,compress,entity,ext,fast,fork,i,it,item,json,size,smile,threads)
library("rjson")
setwd("/home/kurt/dev/microbenchmarks/javaserialization/src/main/results")
jsondata<-fromJSON(file="results1.json")
results<-data.frame()
benchmarks<-c()
for (i in 1:length(jsondata)) {
benchmarks<-c(benchmarks, jsondata[[i]]$benchmark)
}
sizes<-data.frame(benchmarks)
sizes<-cbind(sizes, size=c(83,89,267,189,125,176,107,226,166,205,140,288,94,100,294,211,133,200,117,247,174,228,150,210))
rm(benchmarks)
for (i in 1:length(jsondata)) {
item<-jsondata[[i]]
benchmark<-factor(item$benchmark)
entity<-factor(ifelse(grepl("longEntity",item$benchmark), "long","string"))
threads<-item$threads
smile<-ifelse(grepl("[sS]mile",item$benchmark), TRUE,FALSE)
array<-ifelse(grepl("[aA]rray",item$benchmark), TRUE,FALSE)
json<-ifelse(grepl("[jJ]son",item$benchmark), TRUE,FALSE)
ext<-ifelse(grepl("[eE]xt",item$benchmark), TRUE,FALSE)
fast<-ifelse(grepl("[fF]ast",item$benchmark), TRUE,FALSE)
compress<-ifelse(grepl("[cC]ompress",item$benchmark), TRUE,FALSE)
size<-sizes[sizes[,"benchmarks"]==toString(benchmark),]$size
for (fork in 1:length(item$primaryMetric$rawData)) {
for(it in 1:length(item$primaryMetric$rawData[[fork]])) {
row<-data.frame(
benchmark=benchmark,
entity=entity,
threads=threads,
fork=fork,
smile=smile,
array=array,
json=json,
ext=ext,
fast=fast,
compress=compress,
iteration=it,
metric=item$primaryMetric$rawData[[fork]][it],
size=size
)
results <- rbind(results, row)
}
}
}
rm(sizes,array,row,benchmark,compress,entity,ext,fast,fork,i,it,item,json,size,smile,threads)
results
